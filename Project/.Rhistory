color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Target", opacity = 1) %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
#overlayGroups = c("Burden","Target", "Admissions"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1) %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
#overlayGroups = c("Burden","Target", "Admissions"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1) %>%
# Layers control
#addLayersControl(
#baseGroups = c("OpenStreetMap"),
#overlayGroups = c("Burden","Target", "Admissions"),
#options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1)))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1)
# Layers control
#addLayersControl(
#baseGroups = c("OpenStreetMap"),
#overlayGroups = c("Burden","Target", "Admissions"),
#options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
# First Data Layer
addPolygons(group="Burden", data=world_spdf,
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorNumeric("Oranges", Burden_national)(Burden_national),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"National burden:", world_spdf$Burden_national,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Oranges", world_spdf$Burden_national),
values = ~Burden_national, title = "National Burden", opacity = 1) %>%
# Second Data Layer:
addPolygons(group="Target Area",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Burden_target)(Burden_target),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Target Area:", world_spdf$Burden_target,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Burden_target),
values = ~Burden_target, title = "Target", opacity = 1) %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Burden","Target"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
# First Data Layer
addPolygons(group="Burden", data=world_spdf,
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorNumeric("Oranges", Burden_national)(Burden_national),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"National burden:", world_spdf$Burden_national,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Purples", world_spdf$Burden_national),
values = ~Burden_national, title = "National Burden", opacity = 1) %>%
# Second Data Layer:
addPolygons(group="Target Area",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Burden_target)(Burden_target),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Target Area:", world_spdf$Burden_target,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Burden_target),
values = ~Burden_target, title = "Target", opacity = 1) %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Burden","Target"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
# First Data Layer
addPolygons(group="Burden", data=world_spdf,
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorNumeric("Purples", Burden_national)(Burden_national),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"National burden:", world_spdf$Burden_national,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Purples", world_spdf$Burden_national),
values = ~Burden_national, title = "National Burden", opacity = 1) %>%
# Second Data Layer:
addPolygons(group="Target Area",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Burden_target)(Burden_target),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Target Area:", world_spdf$Burden_target,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Burden_target),
values = ~Burden_target, title = "Target", opacity = 1) %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Burden","Target"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
addPolygons(group="Target Area",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Burden_target)(Burden_target),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Target Area:", world_spdf$Burden_target,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Burden_target),
values = ~Burden_target, title = "Target", opacity = 1) %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1)
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Target Area","Admissions"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
addPolygons(group="Target Area",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Burden_target)(Burden_target),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Target Area:", world_spdf$Burden_target,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Burden_target),
values = ~Burden_target, title = "Target", opacity = 1) %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1)%>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Target Area","Admissions"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
addPolygons(group="Target Area",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Burden_target)(Burden_target),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Target Area:", world_spdf$Burden_target,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Burden_target),
values = ~Burden_target, title = "Target", opacity = 1) %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Greens", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Greens", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1)%>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Target Area","Admissions"),
options = layersControlOptions(collapsed =T))
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
addPolygons(group="Target Area",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", Burden_target)(Burden_target),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Target Area:", world_spdf$Burden_target,"<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Reds", world_spdf$Burden_target),
values = ~Burden_target, title = "Target", opacity = 1) %>%
addPolygons(group="Admissions",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Greens", Admission_newchild)(Admission_newchild),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Admissions:", world_spdf$Admission_newchild,"<br/>")) %>%
addLegend("bottomleft", pal = colorNumeric("Greens", world_spdf$Admission_newchild),
values = ~Admission_newchild, title = "Admissions", opacity = 1)%>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Target Area","Admissions"),
options = layersControlOptions(collapsed =T))
burden <- c(10461,	203754,	2024390,	39111,	902309,	5492273,	2695617)
target <- c(800,	89129,	1034644,	24111,	391753,	439093,	2019409)
admissions <- c(122,	93934,	855880,	23505,	373590,	442076,	1744458)
region <- c("CEECIS", "EAPRO" , "ESARO" , "LACRO" , "MENA" , "ROSA" , "WCARO")
coverage <- data.frame(burden, target, admissions, region)
names(coverage) <- c("National Burden","Target Area", "Admissions", "Region")
library(plotly)
plot_ly(sam, x = ~Burden_target, y=~Admission_newchild,
color = ~region, type = "scatter",
text = ~paste(country, 'Year:', SAM))
library(plotly)
plot_ly(sam, x = ~Burden_target, y=~Admission_newchild,
color = ~Region, type = "scatter",
text = ~paste(country, 'SAM %:', SAM))
library(plotly)
plot_ly(sam, x = ~Admission_newchild, y=~Burden_target,
color = ~Region, type = "scatter",
text = ~paste(country, 'SAM %:', SAM))
burden <- c(10461,	203754,	2024390,	39111,	902309,	5492273,	2695617)
target <- c(800,	89129,	1034644,	24111,	391753,	439093,	2019409)
admissions <- c(122,	93934,	855880,	23505,	373590,	442076,	1744458)
region <- c("CEECIS", "EAPRO" , "ESARO" , "LACRO" , "MENA" , "ROSA" , "WCARO")
coverage <- data.frame(burden, target, admissions, region)
names(coverage) <- c("National Burden","Target Area", "Admissions", "Region")
library(plotly)
burden <-plot_ly(coverage, x = ~region, y=~burden, color = ~Region, type = "bar", opacity=0.8)
target <-plot_ly(coverage, x = ~region, y=~target, color = ~Region, type = "bar", opacity=0.8)
admissions <-plot_ly(coverage, x = ~region, y=~admissions, color = ~Region, type = "bar", opacity=0.8)
p <- subplot(burden, target, admissions)
burden <- c(10461,	203754,	2024390,	39111,	902309,	5492273,	2695617)
target <- c(800,	89129,	1034644,	24111,	391753,	439093,	2019409)
admissions <- c(122,	93934,	855880,	23505,	373590,	442076,	1744458)
region <- c("CEECIS", "EAPRO" , "ESARO" , "LACRO" , "MENA" , "ROSA" , "WCARO")
coverage <- data.frame(burden, target, admissions, region)
names(coverage) <- c("National Burden","Target Area", "Admissions", "Region")
library(plotly)
p1 <-plot_ly(coverage, x = ~region, y=~burden, color = ~Region, type = "bar", opacity=0.8)
p2 <-plot_ly(coverage, x = ~region, y=~target, color = ~Region, type = "bar", opacity=0.8)
p3 <-plot_ly(coverage, x = ~region, y=~admissions, color = ~Region, type = "bar", opacity=0.8)
p <- subplot(p1, p2, p3)
library(plotly)
p1 <-plot_ly(coverage, x = ~region, y=~burden, color = ~Region, type = "bar", opacity=0.8)
p2 <-plot_ly(coverage, x = ~region, y=~target, color = ~Region, type = "bar", opacity=0.8)
p3 <-plot_ly(coverage, x = ~region, y=~admissions, color = ~Region, type = "bar", opacity=0.8)
p <- subplot(p1, p2, p3)
library(plotly)
p1 <-plot_ly(coverage, x = ~region, y=~burden, color = ~Region, type = "bar", opacity=0.8)
p2 <-plot_ly(coverage, x = ~region, y=~target, color = ~Region, type = "bar", opacity=0.8)
p3 <-plot_ly(coverage, x = ~region, y=~admissions, color = ~Region, type = "bar", opacity=0.8)
p <- subplot(p1, p2, p3)
p
library(plotly)
p <- plot_ly(coverage, x = ~region, y = ~burden, type = 'bar', name = 'burden') %>%
add_trace(y = ~target, name = 'target') %>%
add_trace(y = ~admissions, name = 'admissions') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
library(plotly)
p <- plot_ly(coverage, x = ~region, y = ~burden, type = 'bar', name = 'Burden') %>%
add_trace(y = ~target, name = 'Target') %>%
add_trace(y = ~admissions, name = 'Admissions') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
setwd("C:/Users/crish/OneDrive/Documents/Columbia SIPA/2017 Spring/Data Visualization/Final Project/")
library(leaflet)
library (raster)
library(rgdal)
library(RColorBrewer)
library(plotly)
library(devtools)
library(readr)
sam <- readstata13::read.dta13("data/2015_SAM_TOTAL_codes.dta")
library(plotly)
p <- plot_ly(coverage, x = ~region, y = ~burden, type = 'bar', name = 'Burden') %>%
add_trace(y = ~target, name = 'Target') %>%
add_trace(y = ~admissions, name = 'Admissions') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
library(leaflet)
library (raster)
library(rgdal)
library(RColorBrewer)
library(plotly)
library(devtools)
#devtools::install_github("rstudio/leaflet")
setwd("C:/Users/crish/OneDrive/Documents/GitHub/Malnutrition")
library(readr)
iycf <- readstata13::read.dta13("data/MAP_2015_General_Info_IYCF.dta")
mnp <- readstata13::read.dta13("data/2015_MNP.dta")
iycf$FP_code <- as.factor(iycf$FP_code)
iycf_v2 <- iycf[which(iycf$FP_code!='NA'),]
install.packages("ggthemes")
install.packages("DT")
plot_ly(iycf, x = ~Region, y=~Counselling_mothers, color = ~Region, type = "box")
plot_ly(iycf, x = ~Region, y=~Counselling_mothers, color = ~Region, type = "bar")
plot_ly(iycf, x = ~Region, y=~Counselling_mothers, type = "bar")
plot_ly(iycf, x = ~Region, y=~Counselling_mothers, color = "#de8a78", type = "bar")
setwd("C:/Users/crish/OneDrive/Documents/Columbia SIPA/2017 Spring/Data Visualization/Final Project/")
library(readr)
jme_latest <- readstata13::read.dta13("data/JME_2016_latest.dta")
jme <- readstata13::read.dta13("data/JME_2016.dta")
disparities <- readstata13::read.dta13("data/stunting disparities.dta")
library(raster)
world_spdf <- shapefile("C:/Users/crish/OneDrive/Documents/Columbia SIPA/2017 Spring/Data Visualization/Final Project/data/world_map/TM_WORLD_BORDERS_SIMPL-0.3.shp")
# Merge the QoG data to Shape Files
library(dplyr)
mapjme <- world_spdf@data %>% left_join(jme_latest, by = c(ISO3 = "iso"))
world_spdf@data <- mapjme
library(leaflet)
leaflet(world_spdf) %>%
addProviderTiles("Esri.WorldGrayCanvas")  %>%
setView(lat=25, lng=2.8 , zoom=2) %>%
# Base groups = Background layer
addTiles(group = "OpenStreetMap") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
addProviderTiles(providers$Stamen.Toner, group = "Toner")  %>%
# Data Layers
# First Data Layer
addPolygons(group="Wasting", data=world_spdf,
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorNumeric("Oranges", wasting)(wasting),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Wasting prevalence:", world_spdf$wasting,"%","<br/>")) %>%
addLegend("bottomright", pal = colorNumeric("Oranges", world_spdf$wasting),
values = ~wasting, title = "% Wasting", opacity = 1) %>%
# Second Data Layer:
addPolygons(group="Stunting",
stroke = FALSE, fillOpacity = 1, smoothFactor = 0.5,
color = ~colorQuantile("Reds", stunting)(stunting),
popup = paste("Country:",world_spdf$NAME,"<br/>",
"Stunting prevalence:", world_spdf$stunting,"%","<br/>")) %>%
addLegend("bottomleft", pal = colorNumeric("Reds", world_spdf$stunting),
values = ~stunting, title = "% Stunting", opacity = 1) %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "Toner", "Toner Lite"),
overlayGroups = c("Stunting","Wasting"),
options = layersControlOptions(collapsed = TRUE) )
devtools::install_github("rstudio/leaflet")
#devtools::install_github("rstudio/leaflet")
library(leaflet)
library (raster)
library(rgdal)
library(RColorBrewer)
library(plotly)
library(devtools)
setwd("C:/Users/crish/OneDrive/Documents/GitHub/Malnutrition")
library(readr)
mnp <- readstata13::read.dta13("data/2015_MNP.dta")
#Mapa integration
childrenMNP <- c(203552,2285242,570648,4263234,446194,1785867,612016)
Region <- c("CEE/CIS", "East Asia and Pacific", "Eastern and Southern Africa",
"Latin America and the Caribbean", "Middle East and North Africa",
"South Asia", "West and Central Africa")
MNP <- data.frame(childrenMNP,Region)
names(MNP) <- c("childrenMNP","Region")
library(ggplot2)
library(ggthemes)
library(scales)
ggplot(data=MNP, aes(x=Region, y=childrenMNP, fill=Region)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette="YlGnBu") +
ggtitle("Graph 1. Number of children given Micronutrient Powder, per region, 2015") +
labs(x="", y = "Children given MNP", size=8) +
theme_classic(base_size = 12) + theme(text = element_text(color = "gray20"),
axis.text.x = element_text(NULL),
legend.position = c("bottom"), legend.direction = "horizontal",
legend.justification = 0.05, legend.text = element_text(size = 9, color = "gray10"),
legend.key.height=unit(1,"line"), legend.key.width=unit(1,"line"),
axis.text = element_text(face = "italic"),
axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 2),
axis.ticks.y = element_blank(),
axis.line = element_line(color = "gray40", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray50", size = 0.5),
panel.grid.major.x = element_blank(),
plot.margin = margin(t = 0, r = 0, b = 40, l = 5, unit = "pt"),
plot.title = element_text(face = "bold", color = "black", size = 11, hjust=0.5))
#grid.text("Source: NUTRIDASH 2015", x = .01, y = .03, just = "left", draw = TRUE))
library(plotly)
plot_ly(MNP, x = ~Region, y=~childrenMNP, color = ~Region, type = "bar", opacity=0.8)
childrenMNP <- c(203552,2285242,570648,4263234,446194,1785867,612016)
Region <- c("CEE/CIS", "EAPRO", "ESARO", "LACRO", "MENA", "ROSA" , "WCARO")
MNP <- data.frame(childrenMNP,Region)
names(MNP) <- c("childrenMNP","Region")
library(ggplot2)
library(ggthemes)
library(scales)
ggplot(data=MNP, aes(x=Region, y=childrenMNP, fill=Region)) + geom_bar(stat = "identity") +
scale_fill_brewer(palette="YlGnBu") +
ggtitle("Graph 1. Number of children given Micronutrient Powder, per region, 2015") +
labs(x="", y = "Children given MNP", size=8) +
theme_classic(base_size = 12) + theme(text = element_text(color = "gray20"),
axis.text.x = element_text(NULL),
legend.position = c("bottom"), legend.direction = "horizontal",
legend.justification = 0.05, legend.text = element_text(size = 9, color = "gray10"),
legend.key.height=unit(1,"line"), legend.key.width=unit(1,"line"),
axis.text = element_text(face = "italic"),
axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 2),
axis.ticks.y = element_blank(),
axis.line = element_line(color = "gray40", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray50", size = 0.5),
panel.grid.major.x = element_blank(),
plot.margin = margin(t = 0, r = 0, b = 40, l = 5, unit = "pt"),
plot.title = element_text(face = "bold", color = "black", size = 11, hjust=0.5))
#grid.text("Source: NUTRIDASH 2015", x = .01, y = .03, just = "left", draw = TRUE))
library(plotly)
plot_ly(MNP, x = ~Region, y=~childrenMNP, color = ~Region, type = "bar", opacity=0.8)
